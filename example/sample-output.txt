
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.test_one.azurecaf_name.naming will be created
  + resource "azurecaf_name" "naming" {
      + clean_input    = true
      + id             = (known after apply)
      + passthrough    = false
      + prefixes       = []
      + random_length  = 0
      + resource_types = [
          + "azurerm_resource_group",
          + "azurerm_app_service",
          + "azurerm_storage_account",
          + "azurerm_key_vault",
          + "azurerm_network_watcher",
          + "azurerm_network_security_group",
          + "azurerm_virtual_network",
          + "azurerm_subnet",
          + "azurerm_virtual_network_gateway",
          + "azurerm_firewall",
        ]
      + result         = (known after apply)
      + results        = (known after apply)
      + separator      = "-"
      + suffixes       = [
          + "rog",
          + "mtx",
          + "dev",
          + "wu",
          + "01",
        ]
      + use_slug       = true
    }

  # module.test_three.azurecaf_name.naming will be created
  + resource "azurecaf_name" "naming" {
      + clean_input    = true
      + id             = (known after apply)
      + passthrough    = false
      + prefixes       = []
      + random_length  = 0
      + resource_types = [
          + "azurerm_resource_group",
          + "azurerm_app_service",
          + "azurerm_storage_account",
          + "azurerm_key_vault",
          + "azurerm_network_watcher",
          + "azurerm_network_security_group",
          + "azurerm_virtual_network",
          + "azurerm_subnet",
          + "azurerm_virtual_network_gateway",
          + "azurerm_firewall",
        ]
      + result         = (known after apply)
      + results        = (known after apply)
      + separator      = "-"
      + suffixes       = [
          + "dnl",
          + "prod",
          + "it",
          + "scu",
        ]
      + use_slug       = true
    }

  # module.test_two.azurecaf_name.naming will be created
  + resource "azurecaf_name" "naming" {
      + clean_input    = true
      + id             = (known after apply)
      + passthrough    = false
      + prefixes       = []
      + random_length  = 0
      + resource_types = [
          + "azurerm_resource_group",
          + "azurerm_app_service",
          + "azurerm_storage_account",
          + "azurerm_key_vault",
          + "azurerm_network_watcher",
          + "azurerm_network_security_group",
          + "azurerm_virtual_network",
          + "azurerm_subnet",
          + "azurerm_virtual_network_gateway",
          + "azurerm_firewall",
        ]
      + result         = (known after apply)
      + results        = (known after apply)
      + separator      = "-"
      + suffixes       = [
          + "svt",
          + "prd",
          + "acc",
          + "cc",
          + "02",
        ]
      + use_slug       = true
    }

Plan: 3 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + test_one_app_service          = (known after apply)
  + test_one_app_service_output   = {
      + debug = null
      + names = (known after apply)
    }
  + test_one_storage_account      = (known after apply)
  + test_one_subnet               = (known after apply)
  + test_one_virtual_network      = (known after apply)
  + test_three_app_service        = (known after apply)
  + test_three_app_service_output = {
      + debug = {
          + clean_input    = true
          + id             = (known after apply)
          + name           = null
          + passthrough    = false
          + prefixes       = []
          + random_length  = 0
          + random_seed    = null
          + resource_type  = null
          + resource_types = [
              + "azurerm_resource_group",
              + "azurerm_app_service",
              + "azurerm_storage_account",
              + "azurerm_key_vault",
              + "azurerm_network_watcher",
              + "azurerm_network_security_group",
              + "azurerm_virtual_network",
              + "azurerm_subnet",
              + "azurerm_virtual_network_gateway",
              + "azurerm_firewall",
            ]
          + result         = (known after apply)
          + results        = (known after apply)
          + separator      = "-"
          + suffixes       = [
              + "dnl",
              + "prod",
              + "it",
              + "scu",
            ]
          + use_slug       = true
        }
      + names = (known after apply)
    }
  + test_three_storage_account    = (known after apply)
  + test_three_subnet             = (known after apply)
  + test_three_virtual_network    = (known after apply)
  + test_two_app_service          = (known after apply)
  + test_two_app_service_output   = {
      + debug = null
      + names = (known after apply)
    }
  + test_two_storage_account      = (known after apply)
  + test_two_subnet               = (known after apply)
  + test_two_virtual_network      = (known after apply)
module.test_one.azurecaf_name.naming: Creating...
module.test_three.azurecaf_name.naming: Creating...
module.test_two.azurecaf_name.naming: Creating...
module.test_one.azurecaf_name.naming: Creation complete after 0s [id=syagueqihtjnapqx]
module.test_two.azurecaf_name.naming: Creation complete after 0s [id=nvkrmdfyorambwkd]
module.test_three.azurecaf_name.naming: Creation complete after 0s [id=lpndavuiobjuisji]

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

test_one_app_service = "app-rog-mtx-dev-wu-01"
test_one_app_service_output = {
  "debug" = null /* object */
  "names" = tomap({
    "azurerm_app_service" = "app-rog-mtx-dev-wu-01"
    "azurerm_firewall" = "fw-rog-mtx-dev-wu-01"
    "azurerm_key_vault" = "kv-rog-mtx-dev-wu-01"
    "azurerm_network_security_group" = "nsg-rog-mtx-dev-wu-01"
    "azurerm_network_watcher" = "nw-rog-mtx-dev-wu-01"
    "azurerm_resource_group" = "rg-rog-mtx-dev-wu-01"
    "azurerm_storage_account" = "strogmtxdevwu01"
    "azurerm_subnet" = "snet-rog-mtx-dev-wu-01"
    "azurerm_virtual_network" = "vnet-rog-mtx-dev-wu-01"
    "azurerm_virtual_network_gateway" = "vgw-rog-mtx-dev-wu-01"
  })
}
test_one_storage_account = "strogmtxdevwu01"
test_one_subnet = "snet-rog-mtx-dev-wu-01"
test_one_virtual_network = "vnet-rog-mtx-dev-wu-01"
test_three_app_service = "app-dnl-prod-it-scu"
test_three_app_service_output = {
  "debug" = {
    "clean_input" = true
    "id" = "lpndavuiobjuisji"
    "name" = tostring(null)
    "passthrough" = false
    "prefixes" = tolist([])
    "random_length" = 0
    "random_seed" = tonumber(null)
    "resource_type" = tostring(null)
    "resource_types" = tolist([
      "azurerm_resource_group",
      "azurerm_app_service",
      "azurerm_storage_account",
      "azurerm_key_vault",
      "azurerm_network_watcher",
      "azurerm_network_security_group",
      "azurerm_virtual_network",
      "azurerm_subnet",
      "azurerm_virtual_network_gateway",
      "azurerm_firewall",
    ])
    "result" = tostring(null)
    "results" = tomap({
      "azurerm_app_service" = "app-dnl-prod-it-scu"
      "azurerm_firewall" = "fw-dnl-prod-it-scu"
      "azurerm_key_vault" = "kv-dnl-prod-it-scu"
      "azurerm_network_security_group" = "nsg-dnl-prod-it-scu"
      "azurerm_network_watcher" = "nw-dnl-prod-it-scu"
      "azurerm_resource_group" = "rg-dnl-prod-it-scu"
      "azurerm_storage_account" = "stdnlproditscu"
      "azurerm_subnet" = "snet-dnl-prod-it-scu"
      "azurerm_virtual_network" = "vnet-dnl-prod-it-scu"
      "azurerm_virtual_network_gateway" = "vgw-dnl-prod-it-scu"
    })
    "separator" = "-"
    "suffixes" = tolist([
      "dnl",
      "prod",
      "it",
      "scu",
    ])
    "use_slug" = true
  }
  "names" = tomap({
    "azurerm_app_service" = "app-dnl-prod-it-scu"
    "azurerm_firewall" = "fw-dnl-prod-it-scu"
    "azurerm_key_vault" = "kv-dnl-prod-it-scu"
    "azurerm_network_security_group" = "nsg-dnl-prod-it-scu"
    "azurerm_network_watcher" = "nw-dnl-prod-it-scu"
    "azurerm_resource_group" = "rg-dnl-prod-it-scu"
    "azurerm_storage_account" = "stdnlproditscu"
    "azurerm_subnet" = "snet-dnl-prod-it-scu"
    "azurerm_virtual_network" = "vnet-dnl-prod-it-scu"
    "azurerm_virtual_network_gateway" = "vgw-dnl-prod-it-scu"
  })
}
test_three_storage_account = "stdnlproditscu"
test_three_subnet = "snet-dnl-prod-it-scu"
test_three_virtual_network = "vnet-dnl-prod-it-scu"
test_two_app_service = "app-svt-prd-acc-cc-02"
test_two_app_service_output = {
  "debug" = null /* object */
  "names" = tomap({
    "azurerm_app_service" = "app-svt-prd-acc-cc-02"
    "azurerm_firewall" = "fw-svt-prd-acc-cc-02"
    "azurerm_key_vault" = "kv-svt-prd-acc-cc-02"
    "azurerm_network_security_group" = "nsg-svt-prd-acc-cc-02"
    "azurerm_network_watcher" = "nw-svt-prd-acc-cc-02"
    "azurerm_resource_group" = "rg-svt-prd-acc-cc-02"
    "azurerm_storage_account" = "stsvtprdacccc02"
    "azurerm_subnet" = "snet-svt-prd-acc-cc-02"
    "azurerm_virtual_network" = "vnet-svt-prd-acc-cc-02"
    "azurerm_virtual_network_gateway" = "vgw-svt-prd-acc-cc-02"
  })
}
test_two_storage_account = "stsvtprdacccc02"
test_two_subnet = "snet-svt-prd-acc-cc-02"
test_two_virtual_network = "vnet-svt-prd-acc-cc-02"
